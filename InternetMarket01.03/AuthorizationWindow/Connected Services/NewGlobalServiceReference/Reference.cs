//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AuthorizationWindow.NewGlobalServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewGlobalServiceReference.INewGlobalService")]
    public interface INewGlobalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewGlobalService/MakeOrder", ReplyAction="http://tempuri.org/INewGlobalService/MakeOrderResponse")]
        bool MakeOrder(int p_id, string userphone, System.DateTime dt, string fullprice, string count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewGlobalService/MakeOrder", ReplyAction="http://tempuri.org/INewGlobalService/MakeOrderResponse")]
        System.Threading.Tasks.Task<bool> MakeOrderAsync(int p_id, string userphone, System.DateTime dt, string fullprice, string count);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewGlobalServiceChannel : AuthorizationWindow.NewGlobalServiceReference.INewGlobalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewGlobalServiceClient : System.ServiceModel.ClientBase<AuthorizationWindow.NewGlobalServiceReference.INewGlobalService>, AuthorizationWindow.NewGlobalServiceReference.INewGlobalService {
        
        public NewGlobalServiceClient() {
        }
        
        public NewGlobalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewGlobalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewGlobalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewGlobalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool MakeOrder(int p_id, string userphone, System.DateTime dt, string fullprice, string count) {
            return base.Channel.MakeOrder(p_id, userphone, dt, fullprice, count);
        }
        
        public System.Threading.Tasks.Task<bool> MakeOrderAsync(int p_id, string userphone, System.DateTime dt, string fullprice, string count) {
            return base.Channel.MakeOrderAsync(p_id, userphone, dt, fullprice, count);
        }
    }
}
