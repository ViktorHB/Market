//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RegistrationWindow.localhostRegistration {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ISignUpService", Namespace="http://tempuri.org/")]
    public partial class SignUpService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignUpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SignUpService() {
            this.Url = global::RegistrationWindow.Properties.Settings.Default.RegistrationWindow_localhostRegistration_SignUpService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCodeCompletedEventHandler GetCodeCompleted;
        
        /// <remarks/>
        public event SignUpCompletedEventHandler SignUpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ISignUpService/GetCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetCode([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string p, out int GetCodeResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetCodeResultSpecified) {
            object[] results = this.Invoke("GetCode", new object[] {
                        p});
            GetCodeResult = ((int)(results[0]));
            GetCodeResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetCodeAsync(string p) {
            this.GetCodeAsync(p, null);
        }
        
        /// <remarks/>
        public void GetCodeAsync(string p, object userState) {
            if ((this.GetCodeOperationCompleted == null)) {
                this.GetCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCodeOperationCompleted);
            }
            this.InvokeAsync("GetCode", new object[] {
                        p}, this.GetCodeOperationCompleted, userState);
        }
        
        private void OnGetCodeOperationCompleted(object arg) {
            if ((this.GetCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCodeCompleted(this, new GetCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ISignUpService/SignUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SignUp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, int code, [System.Xml.Serialization.XmlIgnoreAttribute()] bool codeSpecified, out bool SignUpResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SignUpResultSpecified) {
            object[] results = this.Invoke("SignUp", new object[] {
                        phone,
                        password,
                        email,
                        code,
                        codeSpecified});
            SignUpResult = ((bool)(results[0]));
            SignUpResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void SignUpAsync(string phone, string password, string email, int code, bool codeSpecified) {
            this.SignUpAsync(phone, password, email, code, codeSpecified, null);
        }
        
        /// <remarks/>
        public void SignUpAsync(string phone, string password, string email, int code, bool codeSpecified, object userState) {
            if ((this.SignUpOperationCompleted == null)) {
                this.SignUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignUpOperationCompleted);
            }
            this.InvokeAsync("SignUp", new object[] {
                        phone,
                        password,
                        email,
                        code,
                        codeSpecified}, this.SignUpOperationCompleted, userState);
        }
        
        private void OnSignUpOperationCompleted(object arg) {
            if ((this.SignUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignUpCompleted(this, new SignUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCodeCompletedEventHandler(object sender, GetCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int GetCodeResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetCodeResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SignUpCompletedEventHandler(object sender, SignUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool SignUpResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool SignUpResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591